
export interface UserProfile { // Stored in /users/{uid} for Google authenticated users
  id: string; // Firebase UID
  name: string;
  email?: string;
  photoUrl?: string; // From Google
  countryCode?: string; // From ipapi.co or user input
  birthdate?: string; // ISO string
  sex?: "male" | "female" | "other" | "prefer_not_to_say";
  sexualOrientation?: "straight" | "gay" | "lesbian" | "bisexual" | "pansexual" | "asexual" | "queer" | "questioning" | "other" | "prefer_not_to_say";
  bio?: string;
  dataAiHint?: string; // For Unsplash search keywords for placeholder images
  createdAt?: any; // Firebase server timestamp
  lastLogin?: any; // Firebase server timestamp
}

// User representation for online list and video calls
export interface OnlineUser {
  id: string; // Session ID for anonymous users, Firebase Auth UID for Google users
  name: string;
  photoUrl?: string;
  countryCode?: string;
  isGoogleUser?: boolean; // Flag to identify Google authenticated users
  timestamp?: any; // For Firebase server timestamp
  dataAiHint?: string; // For Unsplash search keywords
}


export interface RTCSessionDescriptionJSON {
  sdp: string;
  type: RTCSdpType;
}

export interface RTCIceCandidateJSON {
  candidate: string;
  sdpMid: string | null;
  sdpMLineIndex: number | null;
  usernameFragment?: string | null;
}

export interface IncomingCallOffer {
  roomId: string; // This is the 1-to-1 call "room", not the conference room
  offer: RTCSessionDescriptionInit;
  callerId: string;
  callerName:string;
  callerPhotoUrl?: string;
  callerCountryCode?: string;
  callerIsGoogleUser?: boolean;
}

export interface CallAnswer { // For 1-to-1 calls
  answer: RTCSessionDescriptionInit;
  calleeId: string;
  calleeIsGoogleUser?: boolean;
}

// For multi-person conference rooms
export interface RoomSignal {
  type: 'offer' | 'answer' | 'candidate';
  senderId: string;
  senderName?: string; // Optional, for display/debug
  data: RTCSessionDescriptionInit | RTCIceCandidateInit; // SDP for offer/answer, candidate object for ICE
}

// For Chat
export interface ChatAttachment {
  id: string; // Unique ID for the attachment
  name: string; // Original file name
  type: string; // MIME type
  url: string; // Firebase Storage URL
  size: number; // File size in bytes
  thumbnailUrl?: string; // Optional: Firebase Storage URL for image thumbnails
}

export interface ChatMessage {
  id: string; // Unique message ID, generated by Firebase push key
  chatRoomId: string; // ID of the chat room (e.g., conferenceRoomId or directChatId)
  senderId: string;
  senderName: string;
  senderPhotoUrl?: string;
  text?: string; // Text content of the message
  attachments?: ChatAttachment[]; // Array of attachments
  timestamp: any; // Firebase ServerValue.TIMESTAMP
  // emojis?: string[]; // Could be an array of emoji characters used, for simple rendering
}
